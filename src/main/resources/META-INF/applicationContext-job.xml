<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	   default-lazy-init="true">

	<!-- 执行需要定时执行的任务加入这里 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
        <property name="dataSource" ref="dataSource" />
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">EBMDynamicQuartz</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <!-- 线程池配置 -->
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">20</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <!-- JobStore 配置 -->
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <!-- 集群配置 -->
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
                <prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">1</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">120000</prop>
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
            </props>
        </property>
        <property name="schedulerName" value="EBMDynamicQuartz" />
        <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->
        <property name="startupDelay" value="30" />
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true" />
        <!-- 设置自动启动 -->
        <property name="autoStartup" value="true" />
        <!--<property name="configLocation" value="classpath:quartz.properties" />-->

		<property name="triggers">
			<list>
				<ref bean="springFrameworkQuartzJobDemoId" />
				<!-- 如果有多个定时任务就在这里添加 -->
				<!-- <ref bean="quartzTrigger2" /> -->
			</list>
		</property>
	</bean>

    <!-- 执行定时器 -->
  	<bean id="springFrameworkQuartzJobDemoId" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!-- 
		                 每隔5秒执行一次：*/5 * * * * ?
		                 每隔1分钟执行一次：0 */1 * * * ?
		                 每天23点执行一次：0 0 23 * * ?
		                 每天凌晨1点执行一次：0 0 1 * * ?
		                 每月1号凌晨1点执行一次：0 0 1 1 * ?
		                 每月最后一天23点执行一次：0 0 23 L * ?
		                 每周星期天凌晨1点实行一次：0 0 1 ? * L
		                 在26分、29分、33分执行一次：0 26,29,33 * * * ?
		                 每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?
		 -->
		<property name="cronExpression" value="*/5 * * * * ?"/>
		<property name="jobDetail" ref="springFrameworkQuartzJobDemoBeanId"/>
	</bean>
	<bean id="springFrameworkQuartzJobDemoBeanId" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.syshlang.quartz.core.quartz.schedulerframework.SpringFrameworkQuartzJobDemo"/>
		<property name="name" value="springFrameworkQuartzJobDemoJob"/>
		<property name="durability" value="true" />
    </bean>
</beans>
